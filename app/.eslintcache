[{"/home/kiquetal/Documents/codes/2k20/coursera-react-bootstrap/app/src/components/HomeComponent.js":"1","/home/kiquetal/Documents/codes/2k20/coursera-react-bootstrap/app/src/components/DishdetailComponent.js":"2","/home/kiquetal/Documents/codes/2k20/coursera-react-bootstrap/app/src/redux/ActionCreators.js":"3","/home/kiquetal/Documents/codes/2k20/coursera-react-bootstrap/app/src/index.js":"4","/home/kiquetal/Documents/codes/2k20/coursera-react-bootstrap/app/src/redux/promotions.js":"5","/home/kiquetal/Documents/codes/2k20/coursera-react-bootstrap/app/src/components/HeaderComponent.js":"6","/home/kiquetal/Documents/codes/2k20/coursera-react-bootstrap/app/src/components/ContactComponent.js":"7","/home/kiquetal/Documents/codes/2k20/coursera-react-bootstrap/app/src/redux/comments.js":"8","/home/kiquetal/Documents/codes/2k20/coursera-react-bootstrap/app/src/shared/baseUrl.js":"9","/home/kiquetal/Documents/codes/2k20/coursera-react-bootstrap/app/src/components/MenuComponent.js":"10","/home/kiquetal/Documents/codes/2k20/coursera-react-bootstrap/app/src/components/MainComponent.js":"11","/home/kiquetal/Documents/codes/2k20/coursera-react-bootstrap/app/src/redux/leaders.js":"12","/home/kiquetal/Documents/codes/2k20/coursera-react-bootstrap/app/src/redux/dishes.js":"13","/home/kiquetal/Documents/codes/2k20/coursera-react-bootstrap/app/src/redux/forms.js":"14","/home/kiquetal/Documents/codes/2k20/coursera-react-bootstrap/app/src/reportWebVitals.js":"15","/home/kiquetal/Documents/codes/2k20/coursera-react-bootstrap/app/src/App.js":"16","/home/kiquetal/Documents/codes/2k20/coursera-react-bootstrap/app/src/redux/ActionTypes.js":"17"},{"size":1385,"mtime":1608345413768,"results":"18","hashOfConfig":"19"},{"size":6395,"mtime":1608380570705,"results":"20","hashOfConfig":"19"},{"size":2719,"mtime":1608381197913,"results":"21","hashOfConfig":"19"},{"size":656,"mtime":1607126578232,"results":"22","hashOfConfig":"19"},{"size":562,"mtime":1608343138602,"results":"23","hashOfConfig":"19"},{"size":2155,"mtime":1607137229089,"results":"24","hashOfConfig":"19"},{"size":8471,"mtime":1608343752100,"results":"25","hashOfConfig":"19"},{"size":603,"mtime":1608379427587,"results":"26","hashOfConfig":"19"},{"size":49,"mtime":1608345502452,"results":"27","hashOfConfig":"19"},{"size":2108,"mtime":1608346525055,"results":"28","hashOfConfig":"19"},{"size":3781,"mtime":1608378458265,"results":"29","hashOfConfig":"19"},{"size":173,"mtime":1607903509670,"results":"30","hashOfConfig":"19"},{"size":545,"mtime":1608343957880,"results":"31","hashOfConfig":"19"},{"size":149,"mtime":1608343600179,"results":"32","hashOfConfig":"19"},{"size":362,"mtime":1606615057201,"results":"33","hashOfConfig":"19"},{"size":511,"mtime":1607793655449,"results":"34","hashOfConfig":"19"},{"size":405,"mtime":1608343937400,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1uk5x0q",{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"41"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/kiquetal/Documents/codes/2k20/coursera-react-bootstrap/app/src/components/HomeComponent.js",[],"/home/kiquetal/Documents/codes/2k20/coursera-react-bootstrap/app/src/components/DishdetailComponent.js",["77","78","79"],"import React from 'react';\nimport {Breadcrumb, BreadcrumbItem, Button, Label, Modal, ModalBody, ModalHeader, Row} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport {\n  Card, CardImg,  CardText, CardBody,\n  CardTitle\n} from 'reactstrap';\nimport {Control, Errors, LocalForm} from \"react-redux-form\";\nimport {Loading} from \"./LoadingComponent\";\nimport {baseUrl} from \"../shared/baseUrl\";\n\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\nclass CommentForm extends React.Component{\n  \n  \n  constructor(props) {\n    super(props);\n    this.state={\n      isModalOpen:false\n    }\n  }\n  \n  handleSubmit = (values) => {\n    alert(JSON.stringify(values));\n    console.log('Current State is: ' + JSON.stringify(values) + `Y MI ${this.props.dishId}`);\n    this.props.postComment(this.props.dishId, values.rating, values.name, values.comment);\n\n    this.toggleModal();\n    \n  }\n  \n  renderForm=() => {\n    \n    this.setState({isModalOpen:true});\n    \n  }\n  toggleModal=() =>  {\n    this.setState({isModalOpen:!this.state.isModalOpen});\n  }\n  \n  \n  //<Errors model=\".rating\" show={(field)=> field.touched && !field.focus}messages={{required:\"Please select a rank\"}} className=\"text-danger\"/>\n  render() {\n    \n    \n    \n    return(<div>\n      <div>\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n          <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n          <ModalBody>\n            <div className=\"container\">\n              <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                \n                <Row className=\"form-group\">\n                  <Label htmlFor=\"Rating\">Rating</Label>\n                  <Control.select model=\".rating\" id=\"rating\" name=\"rating\"\n                                  placeholder=\"Rating\"\n                                  defaultValue=\"1\"\n                                  className=\"form-control\">\n                    \n                    <option value=\"1\" >1</option>\n                    <option value=\"2\">2</option>\n                    <option value=\"3\">3</option>\n                    <option value=\"4\">4</option>\n                    <option value=\"5\">5</option>\n                  </Control.select>\n                \n                \n                </Row>\n                <Row className=\"form-group\">\n                  <Label htmlFor=\"name\" >Your Name</Label>\n                  <Control.text model=\".name\" id=\"name\" name=\"name\"\n                                placeholder=\"Your name\"\n                                validators={{required,minLength:minLength(3),maxLength:maxLength(15)}}\n                                className=\"form-control\"\n                  \n                  \n                  />\n                  <Errors model=\".name\" show=\"touched\" className=\"text-danger\"\n                          messages={{required:'Required',minLength:\"Must be at least 3 characters\",maxLength:\"Must be 15 characters or less\"}}\n                  \n                  />\n                </Row>\n                \n                <Row className=\"form-group\">\n                  <Label htmlFor=\"comment\"> Comment</Label>\n                  \n                  <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\n                                    rows=\"6\"\n                                    className=\"form-control\" />\n                \n                </Row>\n                <Row className=\"form-group\">\n                  \n                  <Button type=\"submit\" color=\"primary\">\n                    Submit\n                  </Button>\n                \n                </Row>\n              </LocalForm>\n            </div>\n          \n          </ModalBody>\n        </Modal>\n      </div>\n      <Button className=\"button border-dark\"  color=\"light\" style={{color:\"gray\"}} onClick={this.renderForm}>  <i className=\"fa fa-pencil\"></i> Submit Comment</Button>\n    \n    </div>)\n    \n    \n    \n  }\n  \n  \n}\n\n\n\nfunction  DishDetail(props){\n  \n  if (props.isLoading) {\n    return(\n      <div className=\"container\">\n        <div className=\"row\">\n          <Loading />\n        </div>\n      </div>\n    );\n  }\n  else if (props.errMess) {\n    return(\n      <div className=\"container\">\n        <div className=\"row\">\n          <h4>{props.errMess}</h4>\n        </div>\n      </div>\n    );\n  }\n  else if (props.dish != null)\n    \n    return (              <div className=\"container\">\n    <div className=\"row\">\n      <Breadcrumb>\n      \n        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\n        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n      </Breadcrumb>\n      <div className=\"col-12\">\n        <h3>{props.dish.name}</h3>\n        <hr />\n      </div>\n    </div>\n    <div className=\"row\">\n      <div className=\"col-12 col-md-5 m-1\">\n        <Dish dish={props.dish} />\n      </div>\n      <div className=\"col-12 col-md-5 m-1\">\n        <RenderComments comments={props.comments} dishId={props.dish.id} postComment={props.postComment}/>\n      </div>\n    </div>\n  </div>);\n  \n  \n  \n}\n  \n  \n  function Dish({dish}) {\n    if (dish != null)\n      return (\n        <Card>\n          <CardImg top src={baseUrl + dish.image} alt={dish.name} />\n          <CardBody>\n            <CardTitle>{dish.name}</CardTitle>\n            <CardText>{dish.description}</CardText>\n          </CardBody>\n        </Card>\n      );\n    else\n      return (\n        <div/>\n      );\n  }\n  \n  function RenderComments({comments,postComment,dishId}) {\n    if (comments != null) {\n      var commentsItems = comments.map((comment) => {\n         var options = { year: 'numeric', month: 'short' ,day:'numeric'};\n\tvar d=new Date(comment.date);\n        return (<li key={comment.id.toString()} className=\"m-1\">\n          <div>{comment.comment}</div>\n          <div className=\"mt-2\">--{comment.author},{d.toLocaleDateString('en-US',options)}</div>\n        </li>);\n        \n        \n      });\n      \n      return (<div className=\"col-12  m-1\">\n        <div className=\"row\">\n        <h4>Comments</h4>\n        <ul className=\"list-unstyled\">{commentsItems}</ul>\n      </div>\n        <div className=\"row\">\n          <CommentForm postComment={postComment} dishId={dishId}/>\n        </div>\n      </div>);\n    } else\n      \n      return (<div/>);\n    \n    \n  }\n  \n\n  \n  \n  \n  \n\n\nexport default DishDetail;\n",["80","81"],"/home/kiquetal/Documents/codes/2k20/coursera-react-bootstrap/app/src/redux/ActionCreators.js",[],"/home/kiquetal/Documents/codes/2k20/coursera-react-bootstrap/app/src/index.js",[],["82","83"],"/home/kiquetal/Documents/codes/2k20/coursera-react-bootstrap/app/src/redux/promotions.js",[],"/home/kiquetal/Documents/codes/2k20/coursera-react-bootstrap/app/src/components/HeaderComponent.js",[],"/home/kiquetal/Documents/codes/2k20/coursera-react-bootstrap/app/src/components/ContactComponent.js",["84","85","86","87","88","89","90","91","92","93","94","95"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem,\n Row, Button,  FormGroup, Label, Input, Col, FormFeedback } from 'reactstrap';\nimport { Control, Form, Errors, actions } from 'react-redux-form';\n\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nexport default  class Contact extends React.Component {\n  \n  constructor(props) {\n    super(props);\n   \n    this.state = {\n      firstname:\"\",\n      lastname:\"\",\n      telnum:\"\",\n      email:\"\",\n      agree:false,\n      contactType: 'Tel',\n      message:\"\",\n      touched: {\n        firstname: false,\n        lastname: false,\n        telnum: false,\n        email: false\n      }\n    }\n    \n    \n  \n  \n  }\n  \n   handleSubmit=(values)=>\n  {\n   alert(\"Current state\" + JSON.stringify({...values}));\n    console.log('Current State is: ' + JSON.stringify(values));\n    this.props.resetFeedbackForm();\n  \n  \n  }\n  \n  \n  \n  render() {\n  \n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <Breadcrumb>\n            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n          </Breadcrumb>\n          <div className=\"col-12\">\n            <h3>Contact Us</h3>\n            <hr/>\n          </div>\n        </div>\n        <div className=\"row row-content\">\n          <div className=\"col-12\">\n            <h3>Location Information</h3>\n          </div>\n          <div className=\"col-12 col-sm-4 offset-sm-1\">\n            <h5>Our Address</h5>\n            <address>\n              121, Clear Water Bay Road<br/>\n              Clear Water Bay, Kowloon<br/>\n              HONG KONG<br/>\n              <i className=\"fa fa-phone\"></i>: +852 1234 5678<br/>\n              <i className=\"fa fa-fax\"></i>: +852 8765 4321<br/>\n              <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n            </address>\n          </div>\n          <div className=\"col-12 col-sm-6 offset-sm-1\">\n            <h5>Map of our Location</h5>\n          </div>\n          <div className=\"col-12 col-sm-11 offset-sm-1\">\n            <div className=\"btn-group\" role=\"group\">\n              <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n              <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\n              <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i\n                className=\"fa fa-envelope-o\"></i> Email</a>\n            </div>\n          </div>\n        </div>\n  \n        <div className=\"row row-content\">\n          <div className=\"col-12\">\n            <h3>Send us your Feedback</h3>\n          </div>\n          <div className=\"col-12 col-md-9\">\n            <Form model=\"feedback\" onSubmit={(values)=>this.handleSubmit(values)}>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                <Col md={10}>\n                  <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                                placeholder=\"First Name\"\n                                className=\"form-control\"\n                                validators={{\n                                  required, minLength: minLength(3), maxLength: maxLength(15)\n                                }}\n                  />\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".firstname\"\n                    show=\"touched\"\n                    messages={{\n                      required: 'Required',\n                      minLength: 'Must be greater than 2 characters',\n                      maxLength: 'Must be 15 characters or less'\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                <Col md={10}>\n                  <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                                placeholder=\"Last Name\"\n                                className=\"form-control\"\n                                validators={{\n                                  required, minLength: minLength(3), maxLength: maxLength(15)\n                                }}\n                  />\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".lastname\"\n                    show=\"touched\"\n                    messages={{\n                      required: 'Required',\n                      minLength: 'Must be greater than 2 characters',\n                      maxLength: 'Must be 15 characters or less'\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                <Col md={10}>\n                  <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                                placeholder=\"Tel. Number\"\n                                className=\"form-control\"\n                                validators={{\n                                  required, minLength: minLength(3), maxLength: maxLength(15), isNumber\n                                }}\n                  />\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".telnum\"\n                    show=\"touched\"\n                    messages={{\n                      required: 'Required',\n                      minLength: 'Must be greater than 2 numbers',\n                      maxLength: 'Must be 15 numbers or less',\n                      isNumber: 'Must be a number'\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"email\" md={2}>Email</Label>\n                <Col md={10}>\n                  <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                placeholder=\"Email\"\n                                className=\"form-control\"\n                                validators={{\n                                  required, validEmail\n                                }}\n                  />\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".email\"\n                    show=\"touched\"\n                    messages={{\n                      required: 'Required',\n                      validEmail: 'Invalid Email Address'\n                    }}\n                  />\n                </Col>\n              </Row>\n  \n              <Row className=\"form-group\">\n                <Col md={{size: 6, offset: 2}}>\n                  <div className=\"form-check\">\n                    <Label check>\n                      <Control.checkbox model=\".agree\" name=\"agree\"\n                                        className=\"form-check-input\"\n                      /> {' '}\n                      <strong>May we contact you?</strong>\n                    </Label>\n                  </div>\n                </Col>\n                <Col md={{size: 3, offset: 1}}>\n                  <Control.select model=\".contactType\" name=\"contactType\"\n                                  className=\"form-control\">\n                    <option>Tel.</option>\n                    <option>Email</option>\n                  </Control.select>\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                <Col md={10}>\n                  <Control.textarea model=\".message\" id=\"message\" name=\"message\"\n                                    rows=\"12\"\n                                    className=\"form-control\" />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Col md={{size:10, offset: 2}}>\n                  <Button type=\"submit\" color=\"primary\">\n                    Send Feedback\n                  </Button>\n                </Col>\n              </Row>\n            </Form>\n          </div>\n      </div>\n      </div>\n    );\n  }\n}\n\n",["96","97"],"/home/kiquetal/Documents/codes/2k20/coursera-react-bootstrap/app/src/redux/comments.js",[],"/home/kiquetal/Documents/codes/2k20/coursera-react-bootstrap/app/src/shared/baseUrl.js",[],"/home/kiquetal/Documents/codes/2k20/coursera-react-bootstrap/app/src/components/MenuComponent.js",["98"],"import React  from 'react';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport {\n  Card, CardImg, CardImgOverlay,\n  CardTitle\n} from 'reactstrap';\n\nimport { Loading } from './LoadingComponent';\nimport {baseUrl} from \"../shared/baseUrl\";\n\n\nfunction RenderMenuItem ({dish, onClick}) {\n  return (\n    <Card>\n      <Link to={`/menu/${dish.id}`} >\n        <CardImg src={baseUrl + dish.image} alt={dish.name} />\n        <CardImgOverlay>\n          <CardTitle>{dish.name}</CardTitle>\n        </CardImgOverlay>\n      </Link>\n    </Card>\n  );\n}\n\n\n\nfunction MenuItem({dish,onClick})\n  {\n    return( <Card key={dish.id.toString()}\n                  onClick={() => onClick(dish.id)}>\n      <CardImg width=\"100%\" src={dish.image} alt={dish.name}/>\n      <CardImgOverlay>\n        <CardTitle>{dish.name}</CardTitle>\n      </CardImgOverlay>\n    </Card>);\n  }\n  \n  \n  const Menu = (props) => {\n  \n    const menu = props.dishes.dishes.map((dish) => {\n      return (\n        <div key={dish.id} className=\"col-12 col-md-5 m-1\">\n          <RenderMenuItem dish={dish} onClick={props.onClick}/>\n        </div>\n      );\n    });\n  \n  \n    if (props.dishes.isLoading) {\n      return(\n        <div className=\"container\">\n          <div className=\"row\">\n            <Loading />\n          </div>\n        </div>\n      );\n    }\n    else if (props.dishes.errMess) {\n      return(\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <h4>{props.dishes.errMess}</h4>\n            </div>\n          </div>\n        </div>\n      );\n    }\n    else\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <Breadcrumb>\n            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n            <BreadcrumbItem active>Menu</BreadcrumbItem>\n          </Breadcrumb>\n          <div className=\"col-12\">\n            <h3>Menu</h3>\n            <hr />\n          </div>\n        </div>\n        <div className=\"row\">\n          {menu}\n        </div>\n      </div>\n    );\n    \n}\n\n\n\n\nexport default Menu;\n","/home/kiquetal/Documents/codes/2k20/coursera-react-bootstrap/app/src/components/MainComponent.js",["99"],"/home/kiquetal/Documents/codes/2k20/coursera-react-bootstrap/app/src/redux/leaders.js",[],"/home/kiquetal/Documents/codes/2k20/coursera-react-bootstrap/app/src/redux/dishes.js",[],"/home/kiquetal/Documents/codes/2k20/coursera-react-bootstrap/app/src/redux/forms.js",[],["100","101"],"/home/kiquetal/Documents/codes/2k20/coursera-react-bootstrap/app/src/reportWebVitals.js",[],"/home/kiquetal/Documents/codes/2k20/coursera-react-bootstrap/app/src/App.js",[],"/home/kiquetal/Documents/codes/2k20/coursera-react-bootstrap/app/src/redux/ActionTypes.js",[],{"ruleId":"102","severity":1,"message":"103","line":60,"column":19,"nodeType":"104","endLine":63,"endColumn":60},{"ruleId":"102","severity":1,"message":"105","line":76,"column":19,"nodeType":"104","endLine":82,"endColumn":21},{"ruleId":"102","severity":1,"message":"106","line":92,"column":19,"nodeType":"104","endLine":94,"endColumn":64},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"107","replacedBy":"111"},{"ruleId":"109","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":4,"column":16,"nodeType":"115","messageId":"116","endLine":4,"endColumn":25},{"ruleId":"113","severity":1,"message":"117","line":4,"column":34,"nodeType":"115","messageId":"116","endLine":4,"endColumn":39},{"ruleId":"113","severity":1,"message":"118","line":4,"column":46,"nodeType":"115","messageId":"116","endLine":4,"endColumn":58},{"ruleId":"113","severity":1,"message":"119","line":5,"column":33,"nodeType":"115","messageId":"116","endLine":5,"endColumn":40},{"ruleId":"120","severity":1,"message":"121","line":86,"column":15,"nodeType":"104","endLine":86,"endColumn":57},{"ruleId":"102","severity":1,"message":"105","line":102,"column":19,"nodeType":"104","endLine":108,"endColumn":21},{"ruleId":"102","severity":1,"message":"105","line":124,"column":19,"nodeType":"104","endLine":130,"endColumn":21},{"ruleId":"102","severity":1,"message":"105","line":146,"column":19,"nodeType":"104","endLine":152,"endColumn":21},{"ruleId":"102","severity":1,"message":"105","line":169,"column":19,"nodeType":"104","endLine":175,"endColumn":21},{"ruleId":"102","severity":1,"message":"122","line":192,"column":23,"nodeType":"104","endLine":194,"endColumn":25},{"ruleId":"102","severity":1,"message":"103","line":200,"column":19,"nodeType":"104","endLine":201,"endColumn":60},{"ruleId":"102","severity":1,"message":"106","line":210,"column":19,"nodeType":"104","endLine":212,"endColumn":64},{"ruleId":"107","replacedBy":"123"},{"ruleId":"109","replacedBy":"124"},{"ruleId":"113","severity":1,"message":"125","line":28,"column":10,"nodeType":"115","messageId":"116","endLine":28,"endColumn":18},{"ruleId":"126","severity":1,"message":"127","line":38,"column":3,"nodeType":"128","messageId":"129","endLine":42,"endColumn":4},{"ruleId":"107","replacedBy":"130"},{"ruleId":"109","replacedBy":"131"},"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-native-reassign",["132"],"no-negated-in-lhs",["133"],["132"],["133"],"no-unused-vars","'FormGroup' is defined but never used.","Identifier","unusedVar","'Input' is defined but never used.","'FormFeedback' is defined but never used.","'actions' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE",["132"],["133"],"'MenuItem' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["132"],["133"],"no-global-assign","no-unsafe-negation"]